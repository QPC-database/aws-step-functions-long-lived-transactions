# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
Comment: "re:Invent 2018 Builder Session - Managing Long Lived Transactions with AWS Step Functions State Machine"
StartAt: ProcessOrder
TimeoutSeconds: 15
States:
  ProcessOrder:
    Comment: First transaction to save the order and set the order status to new
    Type: Task
    Resource: "${NewOrderFunction}"
    TimeoutSeconds: 10
    Catch:
      - ErrorEquals:
          - ErrProcessOrder
        ResultPath: $.error
        Next: UpdateOrderStatus
    Next: ProcessPayment
  ProcessPayment:
    Comment: Task processes the order payment
    Type: Task
    Resource: "${DebitPaymentFunction}"
    TimeoutSeconds: 10
    Catch:
      - ErrorEquals:
          - ErrProcessPayment
        ResultPath: $.error
        Next: ProcessRefund
    Next: ReserveInventory
  ReserveInventory:
    Comment: Task to reserve order items in inventory
    Type: Task
    Resource: "${ReserveInventoryFunction}"
    TimeoutSeconds: 10
    Catch:
      - ErrorEquals:
          - ErrReserveInventory
        ResultPath: $.error
        Next: ReleaseInventory
    Next: "sns:NotifySuccess"
  "sns:NotifySuccess":
    Type: Task
    Resource: "arn:aws:states:::sns:publish"
    Parameters:
      Message.$: $.order_id
      TopicArn: "${SagaTopic}"
    ResultPath: $.notification
    Next: OrderSucceeded
  OrderSucceeded:
    Type: Succeed
  ReleaseInventory:
    Comment: Task to release order items back to inventory
    Type: Task
    Resource: "${ReleaseInventoryFunction}"
    TimeoutSeconds: 10
    Retry:
      - ErrorEquals:
          - States.ALL
        IntervalSeconds: 1
        MaxAttempts: 2
        BackoffRate: 2
    Catch:
      - ErrorEquals:
          - ErrReleaseInventory
        ResultPath: $.error
        Next: "sns:NotifyReleaseInventoryFail"
    Next: ProcessRefund
  "sns:NotifyReleaseInventoryFail":
    Type: Task
    Resource: "arn:aws:states:::sns:publish"
    Parameters:
      Message.$: $.order_id
      TopicArn: "${SagaTopic}"
    ResultPath: $.notification
    Next: OrderFailed
  ProcessRefund:
    Comment: Task to process order refund
    Type: Task
    Resource: "${CreditPaymentFunction}"
    TimeoutSeconds: 10
    Retry:
      - ErrorEquals:
          - States.TaskFailed
        IntervalSeconds: 1
        MaxAttempts: 2
        BackoffRate: 2
    Catch:
      - ErrorEquals:
          - ErrProcessRefund
        ResultPath: $.error
        Next: "sns:NotifyProcessRefundFail"
    Next: UpdateOrderStatus
  "sns:NotifyProcessRefundFail":
    Type: Task
    Resource: "arn:aws:states:::sns:publish"
    Parameters:
      Message.$: $.order_id
      TopicArn: "${SagaTopic}"
    ResultPath: $.notification
    Next: OrderFailed
  UpdateOrderStatus:
    Comment: Task sets the order status to Pending.
    Type: Task
    Resource: "${UpdateOrderFunction}"
    TimeoutSeconds: 10
    Catch:
      - ErrorEquals:
          - ErrUpdateOrderStatus
        ResultPath: $.error
        Next: "sns:NotifyUpdateOrderFail"
    Next: "sns:NotifyUpdateOrderFail"
  "sns:NotifyUpdateOrderFail":
    Type: Task
    Resource: "arn:aws:states:::sns:publish"
    Parameters:
      Message.$: $.order_id
      TopicArn: "${SagaTopic}"
    ResultPath: $.notification
    Next: OrderFailed
  OrderFailed:
    Type: Fail
